# A cluster scoped "SecureDatabase" composite managed resource.
apiVersion: crossplane.io/v1alpha1
kind: ResourceDefinition
metadata:
  name: securedatabases.azure.example.org
spec:
  resources:
    - identifier: resourcegroup
      apiVersion: azure.crossplane.io/v1alpha3
      kind: ResourceGroup
      metadata:
      spec:
        location: West US
        providerRef:
          name: example
        reclaimPolicy: Delete
      patch:
        - fromFieldPath: "spec.providerRef.name"
          toFieldPath: "spec.providerRef.name"
        - fromFieldPath: "spec.location"
          toFieldPath: "spec.forProvider.location"
    - identifier: mysqlserver
      apiVersion: database.azure.crossplane.io/v1beta1
      kind: MySQLServer
      spec:
        forProvider:
          administratorLogin: myadmin
          resourceGroupNameSelector:
            matchComposite: true
          location: West US
          sslEnforcement: Disabled
          version: "5.6"
          sku:
            tier: Basic
            capacity: 1
            family: Gen5
          storageProfile:
            storageMB: 20480
        writeConnectionSecretToRef:
          namespace: crossplane-system
        providerRef:
          name: example
        reclaimPolicy: Delete
      patch:
        - fromFieldPath: "spec.providerRef.name"
          toFieldPath: "spec.providerRef.name"
        - fromFieldPath: "metadata.uid"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
        - fromFieldPath: "spec.version"
          toFieldPath: "spec.forProvider.version"
        - fromFieldPath: "spec.storageMB"
          toFieldPath: "spec.forProvider.storageMB"
        - fromFieldPath: "spec.location"
          toFieldPath: "spec.forProvider.location"
      # Any resource can fill the keys with their connection secret, if there is one.
      connectionDetails:
        - name: username
          fromConnectionSecretKey: username
        - name: password
          fromConnectionSecretKey: password
        - name: endpoint
          fromConnectionSecretKey: endpoint
    - identifier: vnetrule
      apiVersion: database.azure.crossplane.io/v1alpha3
      kind: MySQLServerVirtualNetworkRule
      spec:
        name: my-cool-vnet-rule
        serverNameSelector:
          matchComposite: true
        resourceGroupNameSelector:
          matchComposite: true
        properties:
          virtualNetworkSubnetIdRef:
            name: sample-subnet
        reclaimPolicy: Delete
        providerRef:
          name: azure-provider
      patch:
        - fromFieldPath: "spec.providerRef.name"
          toFieldPath: "spec.providerRef.name"
        - fromFieldPath: "spec.virtualNetworkSubnetIdRef.name"
          toFieldPath: "spec.properties.virtualNetworkSubnetIdRef.name"
  # fields whose value this will take, continuously sync.
  # this is useful to reuse the same claim by different resource definitions.
  # Maybe do this in patch fields above? 3 fields: fromClaim, onComposition, toResource?
  claimFieldBindings:
    - fromFieldPath: "spec.engineVersion" # exists in the claim.
      toFieldPath: "spec.version" # exists in the SecureDatabase resource.
      transforms:
        - type: math
          math:
            multiply: 1024
        ...
  crdRef:
    name: securedatabases.azure.example.org
  crdSpecTemplate:
    group: azure.example.org
    version: v1alpha1
    names:
      kind: SecureDatabase
      listKind: SecureDatabaseList
      plural: securedatabases
      singular: securedatabase
    scope: Cluster
    validation:
      openAPIV3Schema:
        properties:
          administratorLogin:
            type: string
          location:
            type: string
          sslEnforcement:
            type: string
          version:
            type: string
          sku:
            properties:
              tier:
                type: string
              capacity:
                type: integer
              family:
                type: string
            type: object
          storageProfile:
            properties:
              storageMB:
                type: integer
            type: object
          virtualNetworkSubnetIdRef:
            properties:
              name:
                type: string
            type: object
          providerRef:
            properties:
              name:
                type: string
            type: object
        type: object