# A SecureDatabaseClass CRD is generated with field names given in `ResourceDefinition`.spec.resources[*].identifier
# Infra operators will write instances of this SecureDatabaseClass for different
# regions/clouds/teams etc. Each spec field is one resource.
#
# Infra-operators can define default values for the fields here in case the field
# is unset in the claim even though its binding was defined in ResourceDefinition.
#
# There are fields like `providerRef`, `writeConnectionSecretToRef` in each spec
# object of the managed resource. Controller will override them via the ones given
# in SecureDatabaseClass.spec.providerRef/reclaimPolicy etc. We can reject creation
# of SecureDatabaseClass if individual resources includes those fields or simply delete those
# fields.
apiVersion: azure.example.io/v1alpha1
kind: SecureDatabaseClass
metadata:
  name: private-mysql-server
  labels:
    example: "true"
spec:
  writeConnectionSecretToRef:
    namespace: crossplane-system
  providerRef:
    name: example
  reclaimPolicy: Delete
  resouregroup:
#    Author can skip apiVersion and kind since we already know it and can late initialize the fields after the creation.
#    apiVersion: azure.crossplane.io/v1alpha3
#    kind: ResourceGroup
    spec:
      location: West US
  database:
    apiVersion: database.azure.crossplane.io/v1beta1
    kind: MySQLServer
    spec:
      forProvider:
        administratorLogin: myadmin
        resourceGroupNameSelector:
          inCompositeRef: resourcegroup # direct identifier, will be converted to label selector once a SecureDatabase is created.
        location: West US
        sslEnforcement: Disabled
        version: "5.6"
        sku:
          tier: Basic
          capacity: 1
          family: Gen5
        storageProfile:
          storageMB: 20480
  mysqlvnetrule:
    apiVersion: database.azure.crossplane.io/v1alpha3
    kind: MySQLServerVirtualNetworkRule
    spec:
      name: my-cool-vnet-rule
      serverNameSelector:
        inCompositeRef: database # direct identifier, will be converted to label selector once a SecureDatabase is created.
      resourceGroupNameSelector:
        inCompositeRef: resourcegroup # direct identifier, will be converted to label selector once a SecureDatabase is created.
      properties:
        virtualNetworkSubnetIdRef:
          name: sample-subnet